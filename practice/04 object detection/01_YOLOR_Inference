{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"01_YOLOR_Inference","provenance":[{"file_id":"14FV5yvvd-le78f99xJ2V7NS3J7aCjNq1","timestamp":1658936684144},{"file_id":"1ow1DKm0BBMXo1DteUNMi_XGXA9idGRuz","timestamp":1625653136264}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Object Detection with MSCOCO Dataset with YOLOR**"],"metadata":{"id":"GeNZuFiPfQAd"}},{"cell_type":"markdown","metadata":{"id":"8wnMlYy0pt00"},"source":["## **1. Install YOLOR**"]},{"cell_type":"code","metadata":{"id":"7XUb1tHq_-yy"},"source":["# GPU 할당 체크\n","!nvidia-smi"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 구글 드라이브 연결\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"C5IaIzX3f2sC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 작업장소 생성 및 이동\n","!rm -rf /content/drive/MyDrive/yolor\n","!mkdir /content/drive/MyDrive/yolor\n","%cd /content/drive/MyDrive/yolor"],"metadata":{"id":"kGS1uV145xop"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8x8olvc2RwDr"},"source":["# Install YOLOR from GitHub\n","!git clone https://github.com/WongKinYiu/yolor\n","%cd yolor\n","\n","# Install YOLOR\n","!pip install -qr requirements.txt\n","\n","# Install Mish CUDA\n","!git clone https://github.com/JunnYu/mish-cuda\n","%cd mish-cuda\n","!python setup.py build install\n","%cd ..\n","\n","# Install PyTorch Wavelets\n","!git clone https://github.com/fbcotter/pytorch_wavelets\n","%cd pytorch_wavelets\n","!pip install .\n","%cd ..\n","\n","%cd /content/drive/MyDrive/yolor"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## **2. YOLOR Weight 및 데이터 다운로드**"],"metadata":{"id":"FtIhcnkCfc2a"}},{"cell_type":"code","source":["!rm -rf dataset\n","!wget -O dataset.zip https://www.dropbox.com/s/oo007d0qd97ls2p/dataset_infer.zip?dl=1\n","!unzip dataset.zip -d dataset\n","!rm -rf dataset.zip"],"metadata":{"id":"XAk3cSQYY2pQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# YOLOR-P6, W6, E6, D6\n","!wget -O yolor_p6.pt https://www.dropbox.com/s/ldyk3dzuuu3y9xx/yolor_p6.pt?dl=1\n","#!wget -O yolor_w6.pt https://www.dropbox.com/s/cqrxp1tlfk7sb51/yolor_w6.pt?dl=1\n","#!wget -O yolor_d6.pt https://www.dropbox.com/s/znl5pfwcyr8ylcb/yolor-d6.pt?dl=1\n","#!wget -O yolor_e6.py https://www.dropbox.com/s/ql8e89jwi6wewbc/yolor-e6.pt?dl=1"],"metadata":{"id":"HmZMLSBUdPmv"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jme2PTFOrNXh"},"source":["## **2. YOLOR 이미지 추론 (MS-COCO 데이터셋)**"]},{"cell_type":"code","metadata":{"id":"A53ljj94YHHh"},"source":["in_path = \"dataset/images/\"\n","out_path = \"dataset/images/outputs/\"\n","\n","# Inference using YOLOR\n","!python yolor/detect.py --source $in_path \\\n","                --output $out_path \\\n","                --cfg yolor/cfg/yolor_p6.cfg \\\n","                --weights yolor_p6.pt \\\n","                --names yolor/data/coco.names \\\n","                --conf 0.25 \\\n","                --img-size 1280 \\\n","                --device 0"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Matplotlib을 활용한 추론된 이미지 불러오기"],"metadata":{"id":"2K20DSlki4ry"}},{"cell_type":"code","metadata":{"id":"-Hc75hgCY7Hp"},"source":["import cv2\n","import matplotlib.pyplot as plt\n","import os.path\n","\n","filename = 'test_01.jpg'\n","fig = plt.figure(figsize=(15,10))\n","rows = 1; cols = 2\n","\n","ax1 = fig.add_subplot(rows, cols, 1)\n","ax1.imshow(cv2.cvtColor(cv2.imread(os.path.join(in_path, filename)), cv2.COLOR_BGR2RGB))\n","ax1.set_xlabel('(a)')\n","ax1.set_xticks([]), ax1.set_yticks([])\n","\n","ax2 = fig.add_subplot(rows, cols, 2)\n","ax2.imshow(cv2.cvtColor(cv2.imread(os.path.join(out_path, filename)), cv2.COLOR_BGR2RGB))\n","ax2.set_xlabel('(b)')\n","ax2.set_xticks([]), ax2.set_yticks([])\n","\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4wZKosSorQCS"},"source":["## **3. YOLOR 비디오 추론 (MS-COCO 데이터셋)**"]},{"cell_type":"code","metadata":{"id":"3v1kR_0DgZuE"},"source":["in_path = \"dataset/videos/\"\n","out_path = \"dataset/videos/outputs/\"\n","\n","# Inference using YOLOR\n","!python yolor/detect.py --source $in_path \\\n","                --output $out_path \\\n","                --cfg yolor/cfg/yolor_p6.cfg \\\n","                --weights yolor_p6.pt \\\n","                --names yolor/data/coco.names \\\n","                --conf 0.25 \\\n","                --img-size 1280 \\\n","                --device 0"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CpjCVLMMV38W"},"source":["Display Video Output"]},{"cell_type":"code","metadata":{"id":"kNCzkZpXdkEr"},"source":["from IPython.display import HTML\n","from base64 import b64encode\n","import os\n","\n","# Input video path\n","save_path = \"/content/drive/MyDrive/yolor/dataset/videos/outputs/test_02.mp4\"  #Get your video Here\n","\n","# Compressed video path\n","compressed_path = \"/content/drive/MyDrive/yolor/dataset/videos/outputs/test_02_comp.mp4\"\n","\n","os.system(f\"ffmpeg -i {save_path} -vcodec libx264 {compressed_path}\")\n","\n","# Show video\n","mp4 = open(compressed_path,'rb').read()\n","data_url = \"data:video/mp4;base64,\" + b64encode(mp4).decode()\n","HTML(\"\"\"\n","<video width=1000 controls>\n","      <source src=\"%s\" type=\"video/mp4\">\n","</video>\n","\"\"\" % data_url)"],"execution_count":null,"outputs":[]}]}